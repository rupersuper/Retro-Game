(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function t(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=t(a);fetch(a.href,r)}})();function k(i,e){const t=e*e;return i===0?"top-left":i===e-1?"top-right":i<e?"top":i===t-e?"bottom-left":i===t-1?"bottom-right":i>=t-e?"bottom":i%e===0?"left":(i+1)%e===0?"right":"center"}function b(i){return i<15?"critical":i<50?"normal":"high"}class G{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML=`
      <div class="controls">
        <button data-id="action-restart" class="btn">New Game</button>
        <button data-id="action-save" class="btn">Save Game</button>
        <button data-id="action-load" class="btn">Load Game</button>
      </div>
      <div class="board-container">
        <div data-id="board" class="board"></div>
      </div>
    `,this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",t=>this.onNewGameClick(t)),this.saveGameEl.addEventListener("click",t=>this.onSaveGameClick(t)),this.loadGameEl.addEventListener("click",t=>this.onLoadGameClick(t)),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let t=0;t<this.boardSize**2;t+=1){const s=document.createElement("div");s.classList.add("cell","map-tile",`map-tile-${k(t,this.boardSize)}`),s.addEventListener("mouseenter",a=>this.onCellEnter(a)),s.addEventListener("mouseleave",a=>this.onCellLeave(a)),s.addEventListener("click",a=>this.onCellClick(a)),this.boardEl.appendChild(s)}this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const t of this.cells)t.innerHTML="";for(const t of e){const s=this.boardEl.children[t.position],a=document.createElement("div");a.classList.add("character",t.character.type);const r=document.createElement("div");r.classList.add("health-level");const c=document.createElement("div");c.classList.add("health-level-indicator",`health-level-indicator-${b(t.character.health)}`),c.style.width=`${t.character.health}%`,r.appendChild(c),a.appendChild(r),s.appendChild(a)}}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach(s=>s.call(null,t))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach(s=>s.call(null,t))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach(s=>s.call(null,t))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach(t=>t.call(null))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach(t=>t.call(null))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach(t=>t.call(null))}showError(e){alert(e)}showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter(s=>s.startsWith("selected")))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise(s=>{const a=this.cells[e],r=document.createElement("span");r.textContent=t,r.classList.add("damage"),a.appendChild(r),r.addEventListener("animationend",()=>{a.removeChild(r),s()})})}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(this.container===null)throw new Error("GamePlay not bind to DOM")}}class u{constructor(){this.currentLevel=0,this.currentTurn="player",this.positionedCharacters=[],this.playerTeam=[],this.selectedCharacter=null}static from(e){const t=new u;return Object.assign(t,e),t}}class n{constructor(e,t="generic"){this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t}}class m extends n{constructor(e){super(e,"bowman"),this.attack=25,this.defence=25}}class p extends n{constructor(e){super(e,"swordsman"),this.attack=40,this.defence=10}}class f extends n{constructor(e){super(e,"magician"),this.attack=10,this.defence=40}}class C extends n{constructor(e){super(e,"vampire"),this.health=100,this.attack=25,this.defence=25}}class y extends n{constructor(e){super(e,"undead"),this.health=100,this.attack=40,this.defence=10}}class g extends n{constructor(e){super(e,"daemon"),this.health=100,this.attack=10,this.defence=10}}class E{constructor(e=[]){this.characters=e}add(e){this.characters.push(e)}}function*T(i,e){for(;;){const t=Math.floor(Math.random()*i.length),s=Math.floor(Math.random()*e)+1;yield new i[t](s)}}function v(i,e,t){const s=new E,a=T(i,e);for(let r=0;r<t;r++)s.add(a.next().value);return s}class w{constructor(e,t){if(!(e instanceof n))throw new Error("character must be instance of Character or its children");if(typeof t!="number")throw new Error("position must be a number");this.character=e,this.position=t}}const o={auto:"auto",pointer:"pointer",crosshair:"crosshair",notallowed:"not-allowed"},L=["prairie","desert","arctic","mountain"];class M{constructor(e,t){this.gamePlay=e,this.stateService=t,this.positionedCharacters=[],this.state=new u,this.currentTurn="player",this.currentLevel=0,this.gamePlay.addNewGameListener(this.startNewGame.bind(this)),this.gamePlay.addLoadGameListener(this.restoreGame.bind(this))}init(){this.startNewGame(),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addSaveGameListener(this.saveGame.bind(this))}startGame(){this.currentLevel===4&&(this.gamePlay.showMessage("–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!"),this.currentLevel=3,this.endGame()),this.gamePlay.drawUi(L[this.currentLevel]);const e=[m,p,f],s=v([C,y,g],4,1);let a;this.state.playerTeam.length===0?a=v(e,4,4):a=this.state.playerTeam;const r=[],c=this.generatePositions([0,1]),l=this.generatePositions([6,7]);a.characters.forEach(h=>{const d=c.pop();r.push(new w(h,d))}),s.characters.forEach(h=>{const d=l.pop();r.push(new w(h,d))}),this.positionedCharacters=r,this.gamePlay.redrawPositions(r)}generatePositions(e){const t=[];for(let s=0;s<8;s++)e.forEach(a=>{t.push(a+s*8)});return this.shuffleArray(t)}shuffleArray(e){for(let t=e.length-1;t>0;t--){const s=Math.floor(Math.random()*(t+1));[e[t],e[s]]=[e[s],e[t]]}return e}onCellClick(e){if(this.state.currentTurn!=="player"){this.gamePlay.showError("—Ö–æ–¥ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞");return}console.log(this.positionedCharacters);const t=this.positionedCharacters.find(s=>s.position===e);if(t&&this.isPlayerCharacter(t.character))this.state.selectedCharacter&&this.gamePlay.deselectCell(this.state.selectedCharacter.position),this.state.selectedCharacter=t,this.gamePlay.selectCell(e);else if(this.state.selectedCharacter){const{character:s,position:a}=this.state.selectedCharacter;this.isValidMove(s,a,e)?(console.log(`–î–≤–∏–∂–µ–Ω–∏–µ ${s.type} –∏–∑ ${a} –≤ ${e}`),this.state.selectedCharacter.position=e,this.gamePlay.deselectCell(a),this.gamePlay.redrawPositions(this.positionedCharacters),this.state.selectedCharacter=null,this.endTurn()):this.isValidAttack(s,a,e)?(console.log(`–ê—Ç–∞–∫–∞ –∏–∑ ${a} –≤ ${e}`),this.attackCharacter(s,t,e)):this.gamePlay.showError("–ù–µ–≤–µ—Ä–Ω–π —Ö–æ–¥")}else this.gamePlay.showError("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã")}attackCharacter(e,t,s){const a=Math.max(e.attack-t.character.defence,e.attack*.1);console.log(`–ê—Ç–∞–∫—É—é—â–∏–π: ${e.type}, –ó–∞—â–∏—â–∞—é—â–∏—Å—è: ${t.character.type}, –£—Ä–æ–Ω: ${a}`),t.character.health-=a,this.gamePlay.showDamage(s,a).then(()=>{t.character.health<=0&&(console.log(`${t.character.type} —É–º–µ—Ä`),this.state.selectedCharacter=null,this.positionedCharacters=this.positionedCharacters.filter(r=>r!==t)),this.gamePlay.redrawPositions(this.positionedCharacters),this.checkEndOfRound()})}checkEndOfRound(){const e=this.positionedCharacters.filter(s=>!this.isPlayerCharacter(s.character)),t=this.positionedCharacters.filter(s=>this.isPlayerCharacter(s.character));if(e.length===0){this.currentLevel=this.currentLevel+1,t.forEach(a=>this.levelUpCharacter(a.character));const s=new E;t.forEach(a=>s.add(a.character)),this.state.playerTeam=s,this.startGame()}else t.length===0?this.endGame():this.endTurn()}levelUpCharacter(e){e.level+=1,e.attack=Math.floor(Math.max(e.attack,e.attack*(80+e.health)/100)),e.defence=Math.floor(Math.max(e.defence,e.defence*(80+e.health)/100)),e.health=Math.min(e.level+80,100)}onCellEnter(e){const t=this.positionedCharacters.find(s=>s.position===e);if(t){const{level:s,attack:a,defence:r,health:c}=t.character,l=`üéñ${s} ‚öî${a} üõ°${r} ‚ù§${c}`;this.gamePlay.showCellTooltip(l,e)}if(this.state.selectedCharacter){const{character:s,position:a}=this.state.selectedCharacter;t?this.isPlayerCharacter(t.character)?this.gamePlay.setCursor(o.pointer):this.isValidAttack(s,a,e)?(this.gamePlay.setCursor(o.crosshair),this.gamePlay.selectCell(e,"red")):this.gamePlay.setCursor(o.notallowed):this.isValidMove(s,a,e)?(this.gamePlay.setCursor(o.pointer),this.gamePlay.selectCell(e,"green")):this.gamePlay.setCursor(o.notallowed)}}onCellLeave(e){if(this.gamePlay.deselectCell(e),this.gamePlay.hideCellTooltip(e),this.gamePlay.setCursor(o.auto),this.state.selectedCharacter){const{position:t}=this.state.selectedCharacter;e!==t&&this.gamePlay.deselectCell(e)}}endGame(){this.blockGame()}startNewGame(){console.log("–Ω–æ–≤–∞—è –∏–≥—Ä–∞"),this.state=new u,this.state.currentTurn="player",this.currentLevel=0,this.positionedCharacters=[],this.unblockGame(),this.startGame()}isPlayerCharacter(e){return e instanceof m||e instanceof p||e instanceof f}calculateDistance(e,t){const s=e%8,a=Math.floor(e/8),r=t%8,c=Math.floor(t/8);return Math.max(Math.abs(s-r),Math.abs(a-c))}isValidMove(e,t,s){if(this.positionedCharacters.some(c=>c.position===s))return!1;const r=this.calculateDistance(t,s);switch(e.type){case"swordsman":case"undead":return r<=4;case"bowman":case"vampire":return r<=2;case"magician":case"daemon":return r<=1;default:return!1}}isValidAttack(e,t,s){if(!this.positionedCharacters.some(c=>c.position===s))return!1;const r=this.calculateDistance(t,s);switch(e.type){case"swordsman":case"undead":return r===1;case"bowman":case"vampire":return r<=2;case"magician":case"daemon":return r<=4;default:return!1}}endTurn(){this.state.currentTurn=this.state.currentTurn==="player"?"computer":"player",this.state.currentTurn==="computer"&&(console.log("—Ö–æ–¥ –∫–æ–º–ø—å—é—Ç—Ä–∞"),this.computerMove())}computerMove(){const e=this.positionedCharacters.filter(s=>!this.isPlayerCharacter(s.character)),t=this.positionedCharacters.filter(s=>this.isPlayerCharacter(s.character));for(const s of e)for(const a of t)if(this.isValidAttack(s.character,s.position,a.position)){this.attackCharacter(s.character,a,a.position);return}for(const s of e){const a=t.reduce((c,l)=>{const h=this.calculateDistance(s.position,c.position);return this.calculateDistance(s.position,l.position)<h?l:c}),r=this.generateValidMovePositions(s,a.position);if(r.length>0){s.position=r[0],this.gamePlay.redrawPositions(this.positionedCharacters),this.endTurn();return}}this.endTurn()}generateValidMovePositions(e,t){const s=[];for(let a=0;a<64;a++)this.isValidMove(e.character,e.position,a)&&!this.positionedCharacters.find(r=>r.position===a)&&s.push(a);return s.sort((a,r)=>this.calculateDistance(a,t)-this.calculateDistance(r,t))}restoreGame(){console.log("–∏–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");try{const e=this.stateService.load();this.state=e,this.currentLevel=this.state.currentLevel,this.currentTurn="player",this.positionedCharacters=this.state.positionedCharacters.map(t=>{let s;switch(t.character.type){case"bowman":s=new m(t.character.level,t.character.attack,t.character.defence,t.character.health);break;case"swordsman":s=new p(t.character.level,t.character.attack,t.character.defence,t.character.health);break;case"magician":s=new f(t.character.level,t.character.attack,t.character.defence,t.character.health);break;case"vampire":s=new C(t.character.level,t.character.attack,t.character.defence,t.character.health);break;case"undead":s=new y(t.character.level,t.character.attack,t.character.defence,t.character.health);break;case"daemon":s=new g(t.character.level,t.character.attack,t.character.defence,t.character.health);break;default:throw new Error("Unknown character type")}return{character:s,position:t.position}}),this.state.selectedCharacterIndex!==null?this.state.selectedCharacter=this.positionedCharacters[this.state.selectedCharacterIndex]:this.state.selectedCharacter=null,this.gamePlay.drawUi(L[this.state.currentLevel]),this.gamePlay.redrawPositions(this.state.positionedCharacters)}catch{this.gamePlay.showError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã")}}saveGame(){console.log("–∏–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"),this.state.positionedCharacters=this.positionedCharacters.map(({character:e,position:t})=>({character:{type:e.type,level:e.level,attack:e.attack,defence:e.defence,health:e.health},position:t})),this.state.currentLevel=this.currentLevel,this.state.currentTurn=this.currentTurn,this.state.selectedCharacter?this.state.selectedCharacterIndex=this.positionedCharacters.indexOf(this.state.selectedCharacter):this.state.selectedCharacterIndex=null,this.stateService.save(this.state)}blockGame(){document.getElementById("game-container").style.pointerEvents="none"}unblockGame(){document.getElementById("game-container").style.pointerEvents="auto"}}class O{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch{throw new Error("Invalid state")}}}const P=new G;P.bindToDOM(document.querySelector("#game-container"));const D=new O(localStorage),S=new M(P,D);S.init();
